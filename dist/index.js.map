{"version":3,"sources":["../src/index.ts"],"names":["NanoWrapper","elements","length","on","event","handler","forEach","el","addEventListener","addClass","className","classList","add","removeClass","remove","attr","name","value","undefined","getAttribute","setAttribute","html","content","innerHTML","css","prop","getComputedStyle","getPropertyValue","style","setProperty","append","element","insertAdjacentHTML","appendChild","each","callback","text","textContent","val","empty","prepend","insertBefore","firstChild","parent","parents","map","parentElement","filter","Boolean","children","flatMap","Array","from","find","selector","found","querySelectorAll","first","slice","last","toggleClass","toggle","hasClass","some","contains","hide","display","show","off","removeEventListener","trigger","dispatchEvent","Event","bubbles","data","key","dataKey","hasAttr","hasAttribute","filtered","matches","not","$n","input","document","readyState","Element","window"],"mappings":"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","file":"index.js","sourcesContent":["type NanoElement = Element | HTMLElement;\ntype NanoCallback = (el: NanoElement, index: number) => void;\n\nclass NanoWrapper {\n    elements: NanoElement[];\n\n    constructor(elements: NanoElement[]) {\n        this.elements = elements;\n    }\n\n    get length(): number {\n        return this.elements.length;\n    }\n\n    on(event: string, handler: EventListener): NanoWrapper {\n        this.elements.forEach(el => el.addEventListener(event, handler));\n        return this;\n    }\n\n    addClass(className: string): NanoWrapper {\n        this.elements.forEach(el => el.classList.add(className));\n        return this;\n    }\n\n    removeClass(className: string): NanoWrapper {\n        this.elements.forEach(el => el.classList.remove(className));\n        return this;\n    }\n\n    attr(name: string, value?: string): string | NanoWrapper {\n        if (value === undefined) {\n            return this.elements[0]?.getAttribute(name) || '';\n        }\n        this.elements.forEach(el => el.setAttribute(name, value));\n        return this;\n    }\n\n    html(content?: string): string | NanoWrapper {\n        if (content === undefined) {\n            return this.elements[0]?.innerHTML || '';\n        }\n        this.elements.forEach(el => el.innerHTML = content);\n        return this;\n    }\n\n    css(prop: string, value?: string): string | NanoWrapper {\n        if (value === undefined) {\n            const el = this.elements[0] as HTMLElement;\n            return el ? getComputedStyle(el).getPropertyValue(prop) : '';\n        }\n        this.elements.forEach(el => {\n            (el as HTMLElement).style.setProperty(prop, value);\n        });\n        return this;\n    }\n\n    append(element: NanoElement | string): NanoWrapper {\n        this.elements.forEach(el => {\n            if (typeof element === 'string') {\n                el.insertAdjacentHTML('beforeend', element);\n            } else {\n                el.appendChild(element);\n            }\n        });\n        return this;\n    }\n\n    each(callback: NanoCallback): NanoWrapper {\n        this.elements.forEach(callback);\n        return this;\n    }\n\n    text(content?: string): string | NanoWrapper {\n        if (content === undefined) {\n            return this.elements[0]?.textContent || '';\n        }\n        this.elements.forEach(el => el.textContent = content);\n        return this;\n    }\n\n    val(value?: string): string | NanoWrapper {\n        if (value === undefined) {\n            const el = this.elements[0] as HTMLInputElement;\n            return el?.value || '';\n        }\n        this.elements.forEach(el => {\n            (el as HTMLInputElement).value = value;\n        });\n        return this;\n    }\n\n    remove(): NanoWrapper {\n        this.elements.forEach(el => el.remove());\n        return this;\n    }\n\n    empty(): NanoWrapper {\n        this.elements.forEach(el => el.innerHTML = '');\n        return this;\n    }\n\n    prepend(element: NanoElement | string): NanoWrapper {\n        this.elements.forEach(el => {\n            if (typeof element === 'string') {\n                el.insertAdjacentHTML('afterbegin', element);\n            } else {\n                el.insertBefore(element, el.firstChild);\n            }\n        });\n        return this;\n    }\n\n    parent(): NanoWrapper {\n        const parents = this.elements\n            .map(el => el.parentElement)\n            .filter(Boolean) as NanoElement[];\n        return new NanoWrapper(parents);\n    }\n\n    children(): NanoWrapper {\n        const children = this.elements\n            .flatMap(el => Array.from(el.children)) as NanoElement[];\n        return new NanoWrapper(children);\n    }\n\n    find(selector: string): NanoWrapper {\n        const found = this.elements\n            .flatMap(el => Array.from(el.querySelectorAll(selector))) as NanoElement[];\n        return new NanoWrapper(found);\n    }\n\n    first(): NanoWrapper {\n        return new NanoWrapper(this.elements.slice(0, 1));\n    }\n\n    last(): NanoWrapper {\n        return new NanoWrapper(this.elements.slice(-1));\n    }\n\n    toggleClass(className: string): NanoWrapper {\n        this.elements.forEach(el => el.classList.toggle(className));\n        return this;\n    }\n\n    hasClass(className: string): boolean {\n        return this.elements.some(el => el.classList.contains(className));\n    }\n\n    hide(): NanoWrapper {\n        this.elements.forEach(el => {\n            (el as HTMLElement).style.display = 'none';\n        });\n        return this;\n    }\n\n    show(): NanoWrapper {\n        this.elements.forEach(el => {\n            (el as HTMLElement).style.display = '';\n        });\n        return this;\n    }\n\n    off(event: string, handler?: EventListener): NanoWrapper {\n        this.elements.forEach(el => {\n            if (handler) {\n                el.removeEventListener(event, handler);\n            } else {\n                el.removeEventListener(event, handler as any);\n            }\n        });\n        return this;\n    }\n\n    trigger(event: string): NanoWrapper {\n        this.elements.forEach(el => {\n            el.dispatchEvent(new Event(event, { bubbles: true }));\n        });\n        return this;\n    }\n\n    data(key: string, value?: string): string | NanoWrapper {\n        const dataKey = `data-${key}`;\n        if (value === undefined) {\n            return this.elements[0]?.getAttribute(dataKey) || '';\n        }\n        this.elements.forEach(el => el.setAttribute(dataKey, value));\n        return this;\n    }\n\n    hasAttr(name: string): boolean {\n        return this.elements.some(el => el.hasAttribute(name));\n    }\n\n    filter(selector: string): NanoWrapper {\n        const filtered = this.elements.filter(el => el.matches(selector));\n        return new NanoWrapper(filtered);\n    }\n\n    not(selector: string): NanoWrapper {\n        const filtered = this.elements.filter(el => !el.matches(selector));\n        return new NanoWrapper(filtered);\n    }\n}\n\nfunction $n(input: string | NanoElement | Function): NanoWrapper | void {\n    // Si es una función, ejecutar cuando el DOM esté listo\n    if (typeof input === 'function') {\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', input as () => void);\n        } else {\n            input();\n        }\n        return;\n    }\n\n    // Si es un elemento DOM, envolverlo\n    if (input instanceof Element) {\n        return new NanoWrapper([input]);\n    }\n\n    // Si es un string selector, buscar elementos\n    if (typeof input === 'string') {\n        const elements = Array.from(document.querySelectorAll(input));\n        return new NanoWrapper(elements);\n    }\n\n    return new NanoWrapper([]);\n}\n\n// Exportar para uso en módulos\nexport default $n;\n\n// Para uso global en el navegador\nif (typeof window !== 'undefined') {\n    (window as any).$n = $n;\n}"]}